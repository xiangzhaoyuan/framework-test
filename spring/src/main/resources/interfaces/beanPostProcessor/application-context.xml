<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd">

    <context:component-scan base-package="com.xzy.spring.annotation.init_destroy"/>

    <bean id="testBean1" class="com.xzy.spring.interfaces.beanPostProcessor.TestBean1"
          init-method="initMethod" destroy-method="destroyMethod"/>
    <bean id="testBean2" class="com.xzy.spring.interfaces.beanPostProcessor.TestBean2"
          init-method="initMethod" destroy-method="destroyMethod"/>

    <!--
    1、BeanPostProcessor不会回调depends-on指定的bean，包括间接depends-on的bean，BeanPostProcessor之间也不会进行回调，
    即BeanPostProcessorA不会在BeanPostProcessorB初始化时对其进行回调。
    2、一个bean容器中同时定义有多个BeanPostProcessor时，默认将根据BeanPostProcessor在bean容器中定义的先后顺序对新实例化的bean进行回调；
    还有一种定义BeanPostProcessor回调顺序的方法是将我们自定义的BeanPostProcessor实现类同时实现Ordered接口，
    然后Spring将根据Ordered接口定义的getOrder()方法的返回值来决定BeanPostProcessor回调的先后顺序，getOrder()返回值越小的越先进行回调，
    此外，实现了Ordered接口的BeanPostProcessor总是比没有实现Ordered接口的BeanPostProcessor先进行回调。
    3、BeanPostProcessor配置lazy-init="true"或者beans标签上配置default-lazy-init="true"，这些配置将会被忽略。
    -->
    <bean id="postProcessorA" class="com.xzy.spring.interfaces.beanPostProcessor.PostProcessorA"
          depends-on="testBean2"/>
    <bean id="postProcessorB" class="com.xzy.spring.interfaces.beanPostProcessor.PostProcessorB"/>

</beans>